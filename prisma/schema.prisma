generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(uuid())
  name           String
  email          String    @unique
  hashedPassword String
  emailVerified  DateTime?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  sessions       Session[]
  listings       Listing[] // üëà User can post multiple listings

  @@map("users")
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  id         String   @id @default(uuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model Listing {
  id            String   @id @default(uuid())
  title         String
  description   String
  category      String // PG, Flat, Dharmshala etc.
  subcategory   String // Male PG, 2 BHK, etc.
  price         Int?
  isFree        Boolean  @default(false)
  genderAllowed String? // Male / Female / All
  roomType      String? // Shared / Private / Entire Place
  amenities     String[] // Wi-Fi, AC, Meals etc.

  // üìç Realistic Address Fields
  locality    String
  area        String?
  city        String
  district    String
  state       String

  // üîó Owner
  ownerId String
  owner   User   @relation(fields: [ownerId], references: [id], onDelete: Cascade)

  images         String[]

  // ‚è∞ Metadata
  availableFrom DateTime?
  createdAt     DateTime  @default(now())
}
